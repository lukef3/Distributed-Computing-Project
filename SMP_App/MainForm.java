import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MainForm {
    // Components generated by Swing UI builder
    private JTextField messageField;
    private JButton uploadMessageButton;
    private JButton downloadAllMessagesButton;
    private JTextField downloadField;
    private JButton downloadMessageButton;
    private JButton logOffButton;
    private JTextArea textArea1;
    private JPanel panel1;

    private final String username;
    private final ClientHelper helper;

    // Username and helper passed from login page
    public MainForm(String username, ClientHelper helper) {
        this.username = username;
        this.helper = helper;
        addListeners();
    }

    private void addListeners() {
        // Upload Message
        uploadMessageButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String message = messageField.getText().trim();
                if (message.isEmpty()) {
                    JOptionPane.showMessageDialog(panel1, "Please enter a message to upload.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                try {
                    String response = helper.uploadMessage(username, message);
                    textArea1.append(response + "\n");
                    messageField.setText("");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(panel1, "Error uploading message: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                }
            }
        });

        // Download Specific Message
        downloadMessageButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String id = downloadField.getText().trim();
                if (id.isEmpty()) {
                    JOptionPane.showMessageDialog(panel1, "Please enter a message ID to download.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                try {
                    String response = helper.downloadMessage(id);
                    textArea1.append(response + "\n");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(panel1, "Error downloading message: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                }
            }
        });

        // Download All Messages
        downloadAllMessagesButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    String response = helper.downloadAllMessages();
                    if (response.startsWith("501:")) {
                        String[] messages = (response.substring(response.indexOf(":") + 1).trim()).split("\\|");
                        for (String message : messages) {
                            textArea1.append(message + "\n");
                        }
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(panel1, "Error downloading all messages: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                }
            }
        });

        // Log-Off
        logOffButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    String response = helper.logOff();
                    textArea1.append("Log-Off Response: " + response + "\n");
                    JOptionPane.showMessageDialog(panel1, "Logged off successfully.", "Log Off", JOptionPane.INFORMATION_MESSAGE);

                    // Close the socket
                    helper.done();

                    // Dispose the window
                    Window window = SwingUtilities.getWindowAncestor(panel1);
                    window.dispose();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(panel1, "Error during log-off: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                }
            }
        });
    }

    public JPanel getPanel() {
        return panel1;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel1.setBackground(new Color(-14605015));
        panel1.setMinimumSize(new Dimension(400, 500));
        panel1.setPreferredSize(new Dimension(400, 500));
        messageField = new JTextField();
        messageField.setBackground(new Color(-11972521));
        messageField.setCaretColor(new Color(-1446673));
        messageField.setDisabledTextColor(new Color(-1446673));
        messageField.setForeground(new Color(-1446673));
        messageField.setSelectedTextColor(new Color(-1446673));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 10, 5, 5);
        panel1.add(messageField, gbc);
        downloadField = new JTextField();
        downloadField.setBackground(new Color(-11972521));
        downloadField.setCaretColor(new Color(-1446673));
        downloadField.setDisabledTextColor(new Color(-1446673));
        downloadField.setForeground(new Color(-1446673));
        downloadField.setSelectedTextColor(new Color(-1446673));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 10, 5, 5);
        panel1.add(downloadField, gbc);
        downloadMessageButton = new JButton();
        downloadMessageButton.setBackground(new Color(-9669251));
        downloadMessageButton.setForeground(new Color(-1446673));
        downloadMessageButton.setText("Download Message");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 10);
        panel1.add(downloadMessageButton, gbc);
        uploadMessageButton = new JButton();
        uploadMessageButton.setBackground(new Color(-9669251));
        uploadMessageButton.setForeground(new Color(-1446673));
        uploadMessageButton.setText("Upload Message");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 10);
        panel1.add(uploadMessageButton, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel2.setBackground(new Color(-14605015));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 5;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel2, gbc);
        logOffButton = new JButton();
        logOffButton.setBackground(new Color(-9669251));
        logOffButton.setForeground(new Color(-1446673));
        logOffButton.setText("Log Off");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 10, 5);
        panel2.add(logOffButton, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        panel3.setBackground(new Color(-14605015));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.gridwidth = 5;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel3, gbc);
        downloadAllMessagesButton = new JButton();
        downloadAllMessagesButton.setBackground(new Color(-9669251));
        downloadAllMessagesButton.setBorderPainted(false);
        downloadAllMessagesButton.setForeground(new Color(-1446673));
        downloadAllMessagesButton.setText("Download All Messages");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel3.add(downloadAllMessagesButton, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(10, 10, 10, 10);
        panel1.add(scrollPane1, gbc);
        textArea1 = new JTextArea();
        textArea1.setBackground(new Color(-11972521));
        textArea1.setCaretColor(new Color(-1446673));
        textArea1.setDisabledTextColor(new Color(-1446673));
        textArea1.setEditable(false);
        textArea1.setForeground(new Color(-1446673));
        textArea1.setMargin(new Insets(5, 5, 5, 5));
        scrollPane1.setViewportView(textArea1);
        final JLabel label1 = new JLabel();
        label1.setForeground(new Color(-1446673));
        label1.setText("Secure, Concurrent, Client-Server SMP");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.gridwidth = 3;
        gbc.insets = new Insets(20, 0, 20, 0);
        panel1.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setForeground(new Color(-1446673));
        label2.setText("ID:");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.insets = new Insets(0, 10, 0, 0);
        panel1.add(label2, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}